library(reshape2)
install.packages("plyr")
library("swirl")
swirl()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1,9,3.14)
z <-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
skip()
skip()
skip()
skip()
swirl()
num_vect <- c(0.5,55,-10, 6)
tf <- num_vect < 1
tf
tf
skip()
my_char <- c("My, "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Angele")
my_name
paste(my_name, collapse = " ")
skip()
skip()
paste(LETTERS, 1:4, sep = "-")
x <- c(44,NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
skip()
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
skip()
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf)
)
1
23
)
()
exit
"")
""
names(vect2) <- c("foo", "bar", "norf")
identical(ve)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- c(1:20)
my_vector <- 1:2
my_vector <- 1:3
my_vector <- 1:10
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matric
?matrix
matrix(1:20, 4,5)
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp","rating", "test")
dim(my_data)
colnames(my_data) <- cnames
my_data
swirl()
Sys.Date()
mean(c(2,4,5))
library("swirl")
swirl()
options(editor = "sublime")
swirl()
exit()
q()
options(editor = "internal")
library("swirl")
swirl()
submit()
remainder(5)
remainder(11,5)
skip()
skip()
args(remainder)
play()
args(rem)
nxt()
submit()
skip()
evaluate(function(x){x+1}, 6)
play()
evaluate(function(x,y) {x+y}, 2,3)
evaluate(function(x,y) {x+y}, c(2,3))
nxt()
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming","is", "fun!")
submit()
telegram("FUCK", "ME", "SOOOO", "GOOOOOOOOOOOOOD" "(NSFW)")
telegram("FUCK", "ME", "SOOOO", "GOOOOOOOOOOOOOD" "/(NSFW/)")
telegram("FUCK", "ME", "SOOOO", "GOOOOOOOOOOOOOD" "\(NSFW\)")
telegram("FUCK", "ME", "SOOOO", "GOOOOOOOOOOOOOD", "(NSFW)")
submit()
mad_libs("China", "runny", "bitch")
play()
mad_libs("China", "runny", "bitch")
View(mad_libs)
View(mad_libs)
View(mad_libs)
View(mad_libs)
mad_libs("China", "runny", "bitch")
mad_libs(place: "China", adjective: "runny",noun: "bitch")
mad_libs(place="China", adjective="runny",noun="bitch")
mad_libs("China", "runny", "bitch")
mad_libs(place="China", adjective="runny",noun="bitch")
nxt()
submit()
"I" %p% "love" %p% "R!"
head(flags)
source('C:/R/coursera-r-programming-johnshopkins/quiz1.R', echo=TRUE)
source('C:/R/coursera-r-programming-johnshopkins/quiz1.R', echo=TRUE)
play()
source('C:/R/coursera-r-programming-johnshopkins/quiz1.R', echo=TRUE)
OzOv31TempOv90 <- quizdata[,"Ozone" > 31 & "Temp" > 90]
OzOv31TempOv90 <- quizdata[,"Ozone" > 31 & "Temp" > 90]
OzOv31TempOv90 <- quizdata[, quizdata$Ozone > 31 & quizdata$Temp > 90]
OzOv31TempOv90 <- quizdata[, Ozone > 31 & Temp > 90]
OzOv31TempOv90 <- quizdata[, "Ozone" > 31 & "Temp" > 90]
OzOv31TempOv90 <- quizdata["Ozone" > 31 & "Temp" > 90]
OzOv31TempOv90 <- quizdata["Ozone" > 31 & "Temp" > 90]
OzOv31TempOv90 <- quizdata[,"Ozone" > 31 & "Temp" > 90]
OzOv31TempOv90 <- quizdata["Ozone" > 31 & "Temp" > 90,]
OzOv31TempOv90 <- quizdata[quizdata.Ozone > 31 & quizdata.Temp > 90,]
OzOv31TempOv90 <- quizdata[quizdata$Ozone > 31 & quizdata.Temp > 90,]
OzOv31TempOv90 <- quizdata[quizdata$Ozone > 31 & quizdata$Temp > 90,]
summary(OzOv31TempOv90)
month6 <- quizdata[quizdata$Month == 6,]
head(month6)
mean(month6$Temp)
summary(month6)
OzOv31TempOv90 <- quizdata[quizdata$Ozone > 31 & quizdata$Temp > 90,]
head(OzOv31TempOv90)
maxOzMay <- max(quizdata[quizdata$Month == 5, quizdata$Ozone])
mayOzone <- quizdata[quizdata$Month == 5, quizdata$Ozone])
mayOzone <- quizdata[quizdata$Month == 5, quizdata$Ozone]
mayOzone <- quizdata[quizdata$Month == 5, Ozone]
mayOzone <- quizdata[quizdata$Month == 5, quizdata$Ozone]
mayOzone <- quizdata[quizdata$Month == 5, c(quizdata$Month, quizdata$Ozone)]
mayOzone <- quizdata[quizdata$Month == 5, ]
mayOzone <- quizdata[quizdata$Month == 5,"Ozone", "Month"]
mayOzone <- quizdata[quizdata$Month == 5,"Ozone"]
mayOzone
mayOzone <- quizdata[quizdata$Month == 5,"Month:" & "Ozone"]
mayOzone <- quizdata[quizdata$Month == 5,"Month" & "Ozone"]
mayOzone <- quizdata[quizdata$Month == 5,c("Month","Ozone")]
mayOzone
maxOzMay <- max(quizdata[quizdata$Month == 5,"Ozone"])
maxOzMay
mayOzone
mayOzone <- quizdata[quizdata$Month == 5,"Ozone"]
mayOzone
maxOzMay <- max(quizdata[quizdata$Month == 5,"Ozone"])
maxOzMay
mayOzone <- quizdata[quizdata$Month == 5,"Ozone"]
mayOzone
max(mayOzone)
summary(mayOzone)
max(mayOzone, na.rm = TRUE)
x <- 4
class(x)
x <- c(4, "a", TRUE)
x(class)
class(x)
nxt()
dim(flags)
classs(flags)
class(flags)
play()
as.list(flags)
head(flags)
nxt
nxt()
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character((cls_list)
)
as.character((cls_list))
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
skip()
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
skip()
i+= 1
}
for (i in 1:10) {
skip()
i+= 1
}
for (i in 1:10) {
skip()
i+= 1
}
for (i in 1:10) {
skip()
i+= 1
}
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
